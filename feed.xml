<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/spline/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/spline/" rel="alternate" type="text/html" /><updated>2019-11-18T14:56:49+01:00</updated><id>http://localhost:4000/spline/feed.xml</id><title type="html">Spline</title><subtitle>Data Lineage Tracking and Visualization tool for Apache Spark ™</subtitle><entry><title type="html">Spark job lineage in Azure Databricks with Spline and Azure Cosmos DB API for MongoDB</title><link href="http://localhost:4000/spline/2019/03/25/Spark-job-lineage-in-Azure-Databricks-with-Spline.html" rel="alternate" type="text/html" title="Spark job lineage in Azure Databricks with Spline and Azure Cosmos DB API for MongoDB" /><published>2019-03-25T00:00:00+01:00</published><updated>2019-03-25T00:00:00+01:00</updated><id>http://localhost:4000/spline/2019/03/25/Spark-job-lineage-in-Azure-Databricks-with-Spline</id><content type="html" xml:base="http://localhost:4000/spline/2019/03/25/Spark-job-lineage-in-Azure-Databricks-with-Spline.html">&lt;p&gt;&lt;img src=&quot;https://deepdotdatadotblog.files.wordpress.com/2019/03/image_thumb-3.png&quot; width=&quot;560&quot; height=&quot;315&quot; /&gt;&lt;/p&gt;

&lt;p&gt;iTracking lineage of data as it is manipulated within Apache Spark is a common ask from customers. As of date, there are two options, the first of which is the Hortonworks Spark Atlas Connector, which persists lineage information to Apache Atlas. However, some customers who use Azure Databricks do not necessarily need or use the “full” functionality of Atlas, and instead want a more purpose-built solution. This is where the second option, Spline, comes in. Spline can persist lineage information to Apache Atlas or to a MongoDB database. Now, given that Azure Cosmos DB exposes a MongoDB API, it presents an attractive PaaS option to serve as the persistence layer for Spline.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://deep.data.blog/2019/03/25/spark-job-lineage-in-azure-databricks-with-spline-and-azure-cosmos-db-api-for-mongodb/&quot;&gt;Full article&lt;/a&gt;&lt;/p&gt;</content><author><name>Arvind Shyamsundar @ Microsoft</name></author><summary type="html"></summary></entry><entry><title type="html">Atlas Support Is Back!</title><link href="http://localhost:4000/spline/2019/01/24/Atlas-Support-Is-Back.html" rel="alternate" type="text/html" title="Atlas Support Is Back!" /><published>2019-01-24T00:00:00+01:00</published><updated>2019-01-24T00:00:00+01:00</updated><id>http://localhost:4000/spline/2019/01/24/Atlas-Support-Is-Back</id><content type="html" xml:base="http://localhost:4000/spline/2019/01/24/Atlas-Support-Is-Back.html">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/spline/assets/spline-atlas-ingested-lineage.png&quot; width=&quot;560&quot; height=&quot;315&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Apache Atlas is meta data management platform for big data, which is often also used for data lineage. Spline support of Atlas was temporarily removed due to large refactoring on version 0.3. But now Atlas support is back thanks to &lt;a href=&quot;https://github.com/mn-mikke&quot;&gt;Marek Novotny&lt;/a&gt; released in 0.3.6. Supported Atlas version now is 1.0.&lt;/p&gt;

&lt;h3 id=&quot;spline-atlas-integration-vs-hortonworks-spark-atlas-connector&quot;&gt;Spline Atlas Integration vs Hortonworks Spark Atlas Connector&lt;/h3&gt;

&lt;p&gt;Those who need to use Atlas only and are not worried about loosing Spline’s UI closely tailored for data lineage and improved lineage linking (Spline links exact file versions that were used) may consider using also Hortonworks Spark Atlas connector.&lt;/p&gt;

&lt;p&gt;In short differences between these tools are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spline captures attribute level transformation information within the jobs while Hortonworks provides only basic job information&lt;/li&gt;
  &lt;li&gt;Spline doesn’t support ML and Hive data lineages&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-to-try-out-spline-atlas-integration&quot;&gt;How To Try Out Spline Atlas Integration&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Download Hortonworks Data Platform 3.0.1 Virtualbox Image.&lt;/li&gt;
  &lt;li&gt;Install VirtualBox.&lt;/li&gt;
  &lt;li&gt;Import image into virtualbox with default settings.&lt;/li&gt;
  &lt;li&gt;Change password via via browser ssh simulator on http://localhost:4200/ from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hadoop&lt;/code&gt; to e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;splineisgr8t&lt;/code&gt;. Alternatively you can access &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sandbox-hdp&lt;/code&gt; via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh root@localhost -p 2201&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ambari-admin-password-reset&lt;/code&gt;. After password change Ambari will start. Close the ssh channel.&lt;/li&gt;
  &lt;li&gt;Go to  http://localhost:8080 and make sure HBase, Atlas, Infra Solr, Kafka, HDFS, YARN have maintanence mode disabled and are started&lt;/li&gt;
  &lt;li&gt;Change password in Atlas’ advanced configs tab and restart it and verify that you can access it on http://localhost:21000&lt;/li&gt;
  &lt;li&gt;SSH into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sandbox-host&lt;/code&gt; with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh root@localhost -p 2122&lt;/code&gt; using password &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hadoop&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Proxy additional port 6667 akin to other records: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vi /sandbox/proxy/conf.stream.d/tcp-hdp.conf&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Deploy proxy config &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/sandbox/proxy/proxy-deploy.sh&lt;/code&gt; and exit ssh channel.&lt;/li&gt;
  &lt;li&gt;Secure copy spline meta model json file from Spline source: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scp -P 2201 spline/persistence/atlas/src/main/atlas/spline-meta-model.json root@localhost:/usr/hdp/current/atlas-server/models/&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Go to Ambari and restart Atlas&lt;/li&gt;
  &lt;li&gt;Make sure that you can set &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Search By Type&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spark_job&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Configure your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; file:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1	localhost sandbox-hdp.hortonworks.com sandbox-hdp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;In Spline source code configure Sample jobs properties file: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sample/src/main/resources/spline.properties&lt;/code&gt;:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;spline.persistence.factory=za.co.absa.spline.persistence.atlas.AtlasPersistenceFactory
atlas.kafka.bootstrap.servers=localhost:6667
atlas.kafka.hook.group.id=atlas
atlas.kafka.zookeeper.connect=localhost:2181
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Run a sample job e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/sample/src/main/scala/za/co/absa/spline/sample/batch/SampleJob1.scala&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Search Atlas setting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Search By Type&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spark_job&lt;/code&gt; and you should be able to find your lineage&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Vaclav Kosar @ Absa</name></author><summary type="html"></summary></entry><entry><title type="html">Exploring the Spline Data Tracker and Visualization tool for Apache Spark (Part 2)</title><link href="http://localhost:4000/spline/2018/12/24/Exploring-the-Spline-Data-Tracker-and-Visualization-tool-for-Apache-Spack-Part-2.html" rel="alternate" type="text/html" title="Exploring the Spline Data Tracker and Visualization tool for Apache Spark (Part 2)" /><published>2018-12-24T00:00:00+01:00</published><updated>2018-12-24T00:00:00+01:00</updated><id>http://localhost:4000/spline/2018/12/24/Exploring-the-Spline-Data-Tracker-and-Visualization-tool-for-Apache-Spack-Part-2</id><content type="html" xml:base="http://localhost:4000/spline/2018/12/24/Exploring-the-Spline-Data-Tracker-and-Visualization-tool-for-Apache-Spack-Part-2.html">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/spline/assets/init-spline-graphics.png&quot; width=&quot;560&quot; height=&quot;315&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In part 1 we have learned how to test data lineage info collection with Spline from a Spark shell. The same can be done in any Scala or Java Spark application. The same dependencies for the Spark shell need to be registered in your build tool of choice (Maven, Gradle or sbt)
…&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.javacodegeeks.com/2018/12/spline-tracker-visualization-tool-spark.html&quot;&gt;Full article&lt;/a&gt;&lt;/p&gt;</content><author><name>Guglielmo Iozzia @ Optum Ireland</name></author><summary type="html"></summary></entry><entry><title type="html">Exploring the Spline Data Tracker and Visualization tool for Apache Spark (Part 1)</title><link href="http://localhost:4000/spline/2018/12/02/Exploring-the-Spline-Data-Tracker-and-Visualization-tool-for-Apache-Spack-Part-1.html" rel="alternate" type="text/html" title="Exploring the Spline Data Tracker and Visualization tool for Apache Spark (Part 1)" /><published>2018-12-02T00:00:00+01:00</published><updated>2018-12-02T00:00:00+01:00</updated><id>http://localhost:4000/spline/2018/12/02/Exploring-the-Spline-Data-Tracker-and-Visualization-tool-for-Apache-Spack-Part-1</id><content type="html" xml:base="http://localhost:4000/spline/2018/12/02/Exploring-the-Spline-Data-Tracker-and-Visualization-tool-for-Apache-Spack-Part-1.html">&lt;p&gt;&lt;img src=&quot;http://www.javacodegeeks.com/wp-content/uploads/2018/11/SplineWebUI01.png&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;One interesting and promising Open Source project that caught my attention lately is Spline, a data lineage tracking and visualization tool for Apache Spark, maintained at  Absa. This project consists of 2 parts: a Scala library that works on the drivers which, by analyzing the Spark execution plans, captures the data lineages and a web application which provides a UI to visualize them.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.javacodegeeks.com/2018/12/spline-data-trackervisualization-spark.html&quot;&gt;Full article&lt;/a&gt;&lt;/p&gt;</content><author><name>Guglielmo Iozzia @ Optum Ireland</name></author><summary type="html"></summary></entry><entry><title type="html">Spline 2: Vision And Architecture Overview</title><link href="http://localhost:4000/spline/2018/11/30/Spline-2-Vision-And-Architecture-Overview.html" rel="alternate" type="text/html" title="Spline 2: Vision And Architecture Overview" /><published>2018-11-30T00:00:00+01:00</published><updated>2018-11-30T00:00:00+01:00</updated><id>http://localhost:4000/spline/2018/11/30/Spline-2-Vision-And-Architecture-Overview</id><content type="html" xml:base="http://localhost:4000/spline/2018/11/30/Spline-2-Vision-And-Architecture-Overview.html">&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/nOWuoq70AL75Kt&quot; width=&quot;560&quot; height=&quot;315&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/VaclavKosar/spline-2-vision-and-architecture-overview&quot; title=&quot;Spline 2 - Vision and Architecture Overview&quot; target=&quot;_blank&quot;&gt;Spline 2 - Vision and Architecture Overview&lt;/a&gt; &lt;/strong&gt;&lt;/div&gt;

&lt;p&gt;Upcoming Spline changes:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;EventBus for client-server separation&lt;/li&gt;
  &lt;li&gt;Graph DB for query performance and more natural data model via ArangoDB&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Oleksandr Vayda @ ABSA</name></author><summary type="html">Spline 2 - Vision and Architecture Overview</summary></entry><entry><title type="html">Spline 0.3 User Guide</title><link href="http://localhost:4000/spline/2018/10/25/Spline-0-3-User-Guide.html" rel="alternate" type="text/html" title="Spline 0.3 User Guide" /><published>2018-10-25T00:00:00+02:00</published><updated>2018-10-25T00:00:00+02:00</updated><id>http://localhost:4000/spline/2018/10/25/Spline-0-3-User-Guide</id><content type="html" xml:base="http://localhost:4000/spline/2018/10/25/Spline-0-3-User-Guide.html">&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/45QmpMFozWKqv8&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/VaclavKosar/spline-03-user-guide-129104769&quot; title=&quot;Spline 0.3 User Guide&quot; target=&quot;_blank&quot;&gt;Spline 0.3 User Guide&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;https://www.slideshare.net/VaclavKosar&quot; target=&quot;_blank&quot;&gt;Vaclav Kosar&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
&lt;p&gt;Guides through basic UI features of Spline v0.3.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/VaclavKosar/spline-03-user-guide-129104769&quot;&gt;Slides&lt;/a&gt;&lt;/p&gt;</content><author><name>Vaclav Kosar @ ABSA</name></author><summary type="html">Spline 0.3 User Guide from Vaclav Kosar Guides through basic UI features of Spline v0.3.</summary></entry><entry><title type="html">Spline: Data Lineage For Spark Structured Streaming</title><link href="http://localhost:4000/spline/2018/10/04/Spline-Data-Lineage-For-Structured-Streaming.html" rel="alternate" type="text/html" title="Spline: Data Lineage For Spark Structured Streaming" /><published>2018-10-04T00:00:00+02:00</published><updated>2018-10-04T00:00:00+02:00</updated><id>http://localhost:4000/spline/2018/10/04/Spline-Data-Lineage-For-Structured-Streaming</id><content type="html" xml:base="http://localhost:4000/spline/2018/10/04/Spline-Data-Lineage-For-Structured-Streaming.html">&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/953PcioD6tk&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/VaclavKosar/spline-data-lineage-for-spark-structure-streaming&quot;&gt;Slides&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Data lineage tracking is one of the significant problems that companies in highly regulated industries face. These companies are forced to have a good understanding of how data flows through their systems to comply with strict regulatory frameworks. Many of these organizations also utilize big and fast data technologies such as Hadoop, Apache Spark and Kafka. Spark has become one of the most popular engines for big data computing. In recent releases, Spark also provides the Structured Streaming component, which allows for real-time analysis and processing of streamed data from many sources. Spline is a data lineage tracking and visualization tool for Apache Spark. Spline captures and stores lineage information from internal Spark execution plans in a lightweight, unobtrusive and easy to use manner.&lt;/p&gt;

&lt;p&gt;Additionally, Spline offers a modern user interface that allows non-technical users to understand the logic of Apache Spark applications. In this presentation we cover the support of Spline for Structured Streaming and we demonstrate how data lineage can be captured for streaming applications.&lt;/p&gt;

&lt;p&gt;Presented at Spark + AI Summit London 2018&lt;/p&gt;</content><author><name>Vaclav Kosar, Marek Novotny @ ABSA</name></author><summary type="html">Slides</summary></entry><entry><title type="html">End to End Atlas Lineage with Nifi, Spark, Hive</title><link href="http://localhost:4000/spline/2018/04/16/End-to-End-Atlas-Lineage-with-Nifi-Spark-Hive.html" rel="alternate" type="text/html" title="End to End Atlas Lineage with Nifi, Spark, Hive" /><published>2018-04-16T00:00:00+02:00</published><updated>2018-04-16T00:00:00+02:00</updated><id>http://localhost:4000/spline/2018/04/16/End-to-End-Atlas-Lineage-with-Nifi-Spark-Hive</id><content type="html" xml:base="http://localhost:4000/spline/2018/04/16/End-to-End-Atlas-Lineage-with-Nifi-Spark-Hive.html">&lt;p&gt;&lt;img src=&quot;https://community.hortonworks.com/storage/attachments/70387-screen-shot-2018-04-16-at-60516-pm.png&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Capturing lineage with Atlas from Nifi, Spark and Hive by solving the gap mentioned above using Spline. Spline captures and stores lineage information from internal Spark execution plans in a lightweight, unobtrusive (even if there is an issue in lineage generation , spark job will not fail ) and easy to use manner. …&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://community.hortonworks.com/articles/186772/end-to-end-atlas-lineage-with-nifi-spark-hive.html&quot;&gt;Full article&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Sreekanth Munigati @ Hortonworks</name></author><summary type="html"></summary></entry><entry><title type="html">Data Lineage sur Apache Spark avec Spline</title><link href="http://localhost:4000/spline/2018/02/19/Data-Lineage-sur-Apache-Spark-avec-Spline.html" rel="alternate" type="text/html" title="Data Lineage sur Apache Spark avec Spline" /><published>2018-02-19T00:00:00+01:00</published><updated>2018-02-19T00:00:00+01:00</updated><id>http://localhost:4000/spline/2018/02/19/Data-Lineage-sur-Apache-Spark-avec-Spline</id><content type="html" xml:base="http://localhost:4000/spline/2018/02/19/Data-Lineage-sur-Apache-Spark-avec-Spline.html">&lt;p&gt;&lt;img src=&quot;https://blog.ippon.fr/content/images/2018/02/Capture-d-e-cran-2018-02-15-a--14.26.03.png&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hormis cela, Spline est un outil facile à prendre en main et avec une UI de qualité qui permet aux développeurs et aux métiers d’échanger et d’interagir sur une base commune. À surveiller car Spline est un outil encore jeune qui va s’améliorer et s’enrichir de nouvelle fonctionnalités au cours du temps (Spark Streaming, versionning plus fin des dataset IO, gestion des utilisateurs qui lance les jobs…)…&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.ippon.fr/2018/02/19/data-lineage-spark-avec-spline/&quot;&gt;Full article&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;</content><author><name>Lucien Fregosi @ Natixis</name></author><summary type="html"></summary></entry><entry><title type="html">Spline: Spark Lineage, Not Only for the Banking Industry</title><link href="http://localhost:4000/spline/2018/01/17/Spline-Spark-Lineage-Not-Only-For-The-Banking-Industry.html" rel="alternate" type="text/html" title="Spline: Spark Lineage, Not Only for the Banking Industry" /><published>2018-01-17T00:00:00+01:00</published><updated>2018-01-17T00:00:00+01:00</updated><id>http://localhost:4000/spline/2018/01/17/Spline-Spark-Lineage-Not-Only-For-The-Banking-Industry</id><content type="html" xml:base="http://localhost:4000/spline/2018/01/17/Spline-Spark-Lineage-Not-Only-For-The-Banking-Industry.html">&lt;p&gt;&lt;img src=&quot;http://localhost:4000/spline/assets/spline-paper-performance-fig.png&quot; width=&quot;90%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Data lineage tracking is one of the significant problems that financial institutions face. Banking and other highly regulated industries are forced to have a good understanding of how data flows through their systems to comply with strict regulatory frameworks. Many of these organizations also utilize big data technologies such as Hadoop and Apache Spark. Spark has become one of the most popular engines for big data computation, but it lacks support for data lineage tracking.&lt;/p&gt;

&lt;p&gt;This paper describes Spline - a data lineage tracking and visualization tool for Apache Spark. Spline captures and stores lineage information from internal Spark execution plans in a lightweight, unobtrusive and easy to use manner. Additionally, Spline offers a modern user interface that allows non-technical users to understand the logic of Apache Spark applications. Keywords—Spline; Apache Spark; data lineage; Big data applications; Apache Hadoop; banking; BCBS&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/AbsaOSS/spline/releases/download/release%2F0.2.7/Spline_paper_IEEE_2018.pdf&quot;&gt;Full paper&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.computer.org/csdl/proceedings/bigcomp/2018/3649/00/364901a495-abs.html&quot;&gt;Proceedings&lt;/a&gt;&lt;/p&gt;</content><author><name>Jan Scherbaum, Marek Novotny, Oleksandr Vayda @ ABSA</name></author><summary type="html"></summary></entry></feed>